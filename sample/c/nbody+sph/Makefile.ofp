#-----------------------------------------------------------------------
#   Configuration of compile
#-----------------------------------------------------------------------
# Variables that must be specified by users
# (i) Variables related to FDPS
FDPS_LOC = ../../../
FDPS_INC = -I$(FDPS_LOC)/src 
FDPS_INC += -I$(FDPS_LOC)/src/c_interface/headers
FDPS_C_IF_GENERATOR = $(FDPS_LOC)/scripts/gen_c_if.py

# (ii) Variables to specify compilers and compile options
# Serial or OpenMP cases
#CC=icc
#CXX=icpc
# MPI case
CC=mpiicc
CXX=mpiicpc
# [Option 1] w/o optimization
#CFLAGS   = -O0 -g $(FDPS_INC)
#CXXFLAGS = -O0 -g $(FDPS_INC)
# [Option 2] w/ optimization 
CFLAGS   = -O3 -ipo -xMIC-AVX512 -no-prec-div $(FDPS_INC)
CXXFLAGS = -O3 -ipo -xMIC-AVX512 -no-prec-div $(FDPS_INC)
LDFLAGS = 
# OpenMP options
CFLAGS   += -DPARTICLE_SIMULATOR_THREAD_PARALLEL -qopenmp
CXXFLAGS += -DPARTICLE_SIMULATOR_THREAD_PARALLEL -qopenmp
# MPI options
CFLAGS   += -DPARTICLE_SIMULATOR_MPI_PARALLEL
CXXFLAGS += -DPARTICLE_SIMULATOR_MPI_PARALLEL

#use_phantom_grape_x86 = yes

# fdps-autotest-set-vars (DO NOT CHANGE THIS LINE)

# Simulation control macros 
CFLAGS += -DENABLE_VARIABLE_SMOOTHING_LENGTH
CFLAGS += -DUSE_ENTROPY
CFLAGS += -DUSE_BALSARA_SWITCH
#CFLAGS += -DUSE_PRESCR_OF_THOMAS_COUCHMAN_1992
CFLAGS += -DISOTHERMAL_EOS

CFLAGS += -DINITIAL_CONDITION=0 
#CFLAGS += -DINITIAL_CONDITION=1 
#CFLAGS += -DINITIAL_CONDITION=2 
#CFLAGS += -DINITIAL_CONDITION=3 

#CXXFLAGS += -DREAD_DATA_WITH_BYTESWAP

# Job submission variables
QSUB = pjsub
JOB_FILE_NAME = job.ofp.sh
WORKDIR = /work/xg18i070/x10225/nbodysph-c/

ifeq ($(use_phantom_grape_x86),yes)
PG_ROOT = $(FDPS_LOC)/src//phantom_grape_x86/G5/newton/libpg5
CFLAGS  += -DENABLE_PHANTOM_GRAPE_X86
LDFLAGS  += -L$(PG_ROOT) -lpg5
PG_BUILD = cd $(PG_ROOT) && $(MAKE) distclean libpg5.a
PG_CLEAN = cd $(PG_ROOT) && $(MAKE) distclean
else
PG_ROOT  = 
PG_BUILD =
PG_CLEAN = 
endif

#-----------------------------------------------------------------------
#   Source files
#-----------------------------------------------------------------------
%.o : %.c
	$(CC) $(CFLAGS) -c $<
%.o : %.cpp
	$(CXX) $(CXXFLAGS) -c $<

HDR_USER_DEFINED_TYPE = user_defined.h
SRC_USER_C = user_defined.c \
	     mathematical_constants.c \
	     physical_constants.c \
	     leapfrog.c \
	     ic.c \
	     c_main.c 
SRC_USER_CXX = tipsy_file_reader.cpp
SRC_CXX = FDPS_ftn_if.cpp \
	  FDPS_Manipulators.cpp \
	  main.cpp

OBJ_USER_C = $(SRC_USER_C:c=o)
OBJ_USER_CXX = $(SRC_USER_CXX:c=o)
OBJ_USER = $(OBJ_USER_C) $(OBJ_USER_CXX)
OBJ_CXX	 = $(SRC_CXX:cpp=o)
OBJ	 = $(OBJ_USER) $(OBJ_CXX)

TARGET = nbodysph.out

$(TARGET): $(OBJ) result
	$(PG_BUILD)
	$(CXX) $(OBJ) $(CXXFLAGS) -o $(TARGET) $(LDFLAGS)
	mkdir -p $(WORKDIR)
	mv $(TARGET) $(WORKDIR)
	cp $(JOB_FILE_NAME) $(WORKDIR)
	cd $(WORKDIR); $(QSUB) $(JOB_FILE_NAME)  

result:
	mkdir -p $(WORKDIR)/result

FDPS_c_if.h $(SRC_CXX): $(HDR_USER_DEFINED_TYPE) Makefile
	$(FDPS_C_IF_GENERATOR) user_defined.h --output ./

$(OBJ_USER): FDPS_c_if.h 

ic.o: tipsy_file_reader.o

clean:
	rm -f *.o *.s $(TARGET) *.dat

distclean: clean
	$(PG_CLEAN)
	rm -f FDPS_ftn_if.cpp FDPS_Manipulators.cpp main.cpp FDPS_c_if.h FDPS_Manipulators.h user_defined.hpp 
	rm -rf result

# fdps-autotest-run (DO NOT CHANGE THIS LINE)
