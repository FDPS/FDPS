F32 eps2
F32 kappa
F32 eta

acc_sprg_tmp.x = 0.0f
acc_sprg_tmp.y = 0.0f
acc_sprg_tmp.z = 0.0f
acc_dash_tmp.x = 0.0f
acc_dash_tmp.y = 0.0f
acc_dash_tmp.z = 0.0f
pot_sprg_tmp = 0.0f
pot_grav_tmp = 0.0f

if EPI.id != EPJ.id

    rij = EPI.pos - EPJ.pos
    r_coll_tmp = EPI.r_coll + EPJ.r_coll
    r_coll_sq = r_coll_tmp * r_coll_tmp
    r_real_sq = rij * rij + eps2
    over_r_real    = rsqrt(r_real_sq)
    over_r_real_sq = over_r_real * over_r_real


    if  r_coll_sq > r_real_sq

        r_coll_cu = r_coll_sq * r_coll_tmp
	over_r_coll_cu = 1.0f / r_coll_cu
        acc_grav_tmp = EPJ.mass * over_r_coll_cu * rij
	pot_offset = -1.5f / r_coll_tmp
	
	pot_grav_tmp = 0.25f * EPJ.mass * (r_real_sq * over_r_coll_cu + pot_offset)
	
  	m_red  = EPJ.mass / (EPI.mass + EPJ.mass)
	r_real = r_real_sq * over_r_real
	dr = r_coll_tmp - r_real
        acc_sprg_tmp = kappa * m_red * dr * over_r_real * rij
        pot_sprg_tmp = 0.25f * kappa * m_red * dr * dr
	
	vij = EPI.vel - EPJ.vel
	rv  = rij * vij
	acc_dash_tmp = eta * m_red * rv * over_r_real_sq * rij

    else 
    
        m_over_r_real = EPJ.mass * over_r_real
        acc_grav_tmp = m_over_r_real * over_r_real_sq * rij
        pot_grav_tmp = -0.5f * m_over_r_real
	
    endif

endif

FORCE.acc      += acc_grav_tmp + acc_sprg_tmp + acc_dash_tmp
FORCE.acc_dash += acc_dash_tmp
FORCE.pot      += pot_grav_tmp + pot_sprg_tmp



